{"name": "test_shengzhi_public[post-https://open.ybj.fujian.gov.cn/api/gafe/rest-json0-1]", "status": "broken", "statusDetails": {"message": "TypeError: eval() arg 1 must be a string, bytes or code object", "trace": "self = <test_case.test_hcj.Test_ShengZhiTestCase_001 object at 0x00000213513A5F40>, method = 'post', url = 'https://open.ybj.fujian.gov.cn/api/gafe/rest'\njson = {'appid': '82e82b4703aaafff', 'data': {'app_type': '0', 'appid': '82e82b4703aaafff'}, 'encrypt_type': 'PKCS7', 'funid': 'N03.00.05.11', ...}\nexcepted = 1, init1 = <common.class_requests.HttpSession object at 0x000002135139C190>\n\n    @pytest.mark.parametrize(('method', 'url', 'json', 'excepted'), parames_data)\n    def test_shengzhi_public(self, method, url, json, excepted, init1):\n        print('{}、{}、{}、{}'.format(method, url, json, excepted))\n        #print(case)\n        # 第一步：准备用例数据\n        # url = myconf.get('url', 'url') + case.url  # 读取配置文件和Excel中的url地址进行拼接\n        # url = myconf.get('url', 'url')\n        #url = case.url\n        # url = init[3][1]\n        # 替换用例参数\n        #case.json = data_replace(str(case.json))\n        # json = data_replace(str(json))\n    \n    \n        # if case.interface == '加密接口':\n        #     case.json = Encryption_Interface().encryption_interface(case,case.json)\n    \n            # sign = BaseFuntest.get_md5sheng(eval(case.json))\n            # log.info('签名是:{}'.format(sign))\n            # case.json = str(case.json).replace('\\'', '\\\"')\n            # j = json.loads(case.json)\n            # j['sign'] = sign\n            # log.info('转换为json的数据{}'.format(j))\n            # data = eval(case.json)['data']\n            # datastr = str(data).replace('\\'', '\\\"')\n            # dataspace = str(datastr).replace(' ', '')\n            # log.info('data是：{}'.format(dataspace))\n            # pc = aes.PrpCrypt('C9C9F54F74BD35DE5242885762E99E8E')  # 初始化密钥\n            # e = pc.encrypt(dataspace)  # 加密\n            # print(\"加密:\", e)\n            # j['data']=e\n            # print('j是{}'.format(j))\n            # k = str(j).replace('data','encrypt_data')\n            # l = str(k).replace('\\'', '\\\"')\n            # case.json = l\n    \n    \n        # if case.interface == '获取token':\n>       json, pc = Access_Token().access_token(json,url)\n\ntest_case\\test_hcj.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.Access_token.Access_Token object at 0x000002135139C9D0>\ncases = {'appid': '82e82b4703aaafff', 'data': {'app_type': '0', 'appid': '82e82b4703aaafff'}, 'encrypt_type': 'PKCS7', 'funid': 'N03.00.05.11', ...}\nurl = 'https://open.ybj.fujian.gov.cn/api/gafe/rest'\n\n    def access_token(self,cases,url):\n        # url = case.url\n>       sign = BaseFuntest.get_md5sheng(eval(cases))\nE       TypeError: eval() arg 1 must be a string, bytes or code object\n\ncommon\\Access_token.py:17: TypeError"}, "parameters": [{"name": "method", "value": "'post'"}, {"name": "url", "value": "'https://open.ybj.fujian.gov.cn/api/gafe/rest'"}, {"name": "json", "value": "{'funid': 'N03.00.05.11', 'data': {'app_type': '0', 'appid': '82e82b4703aaafff'}, 'appid': '82e82b4703aaafff', 'sign_type': 'MD5', 'encrypt_type': 'PKCS7'}"}, {"name": "excepted", "value": "1"}], "start": 1638149646387, "stop": 1638149646388, "uuid": "95c5538b-8604-43ab-b3ed-f1cdb0fd57d0", "historyId": "e4f26026887b93ecc66c916e99dcd76d", "testCaseId": "c9259e76d7efb6e85a07528f5653678e", "fullName": "test_case.test_hcj.Test_ShengZhiTestCase_001#test_shengzhi_public", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_hcj"}, {"name": "subSuite", "value": "Test_ShengZhiTestCase_001"}, {"name": "host", "value": "DESKTOP-EKFOSJF"}, {"name": "thread", "value": "14308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_hcj"}]}