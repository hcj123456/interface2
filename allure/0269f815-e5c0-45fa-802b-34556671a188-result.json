{"name": "test_shengzhi_public[post-https://open.ybj.fujian.gov.cn/api/gafe/rest-json0-1-正向用例-True]", "status": "broken", "statusDetails": {"message": "NameError: name 'haders' is not defined", "trace": "self = <test_case.test_hcj.Test_ShengZhiTestCase_001 object at 0x0000016BF149CA60>, method = 'post', url = 'https://open.ybj.fujian.gov.cn/api/gafe/rest'\njson = '{\"funid\": \"N03.00.05.11\", \"encrypt_data\": \"udacTE352N5hOqGKEIo03EghHghApdQ3sctRJREhW7RO/CjdKL5x/rzZca/1Ojf5\", \"appid\": \"82e82b4703aaafff\", \"sign_type\": \"MD5\", \"encrypt_type\": \"PKCS7\", \"sign\": \"0044225F6EEA08FE469ADF1E8B2D6C66\"}'\nexcepted = 1, name = '正向用例', bool = True, init1 = <common.class_requests.HttpSession object at 0x0000016BF149C3A0>\n\n    @pytest.mark.parametrize(('method', 'url', 'json', 'excepted', 'name', 'bool'), parames_data)\n    def test_shengzhi_public(self, method, url, json, excepted, name, bool, init1):\n        print('{}、{}、{}、{}、{}、{}'.format(method, url, json, excepted, name, bool))\n        if not bool:\n            pytest.xfail(reason=\"用例不满足要求不执行\")\n        #print(case)\n        # 第一步：准备用例数据\n        # url = myconf.get('url', 'url') + case.url  # 读取配置文件和Excel中的url地址进行拼接\n        # url = myconf.get('url', 'url')\n        #url = case.url\n        # url = init[3][1]\n        # 替换用例参数\n        #case.json = data_replace(str(case.json))\n        # json = data_replace(str(json))\n    \n    \n        # if case.interface == '加密接口':\n        #     case.json = Encryption_Interface().encryption_interface(case,case.json)\n    \n            # sign = BaseFuntest.get_md5sheng(eval(case.json))\n            # log.info('签名是:{}'.format(sign))\n            # case.json = str(case.json).replace('\\'', '\\\"')\n            # j = json.loads(case.json)\n            # j['sign'] = sign\n            # log.info('转换为json的数据{}'.format(j))\n            # data = eval(case.json)['data']\n            # datastr = str(data).replace('\\'', '\\\"')\n            # dataspace = str(datastr).replace(' ', '')\n            # log.info('data是：{}'.format(dataspace))\n            # pc = aes.PrpCrypt('C9C9F54F74BD35DE5242885762E99E8E')  # 初始化密钥\n            # e = pc.encrypt(dataspace)  # 加密\n            # print(\"加密:\", e)\n            # j['data']=e\n            # print('j是{}'.format(j))\n            # k = str(j).replace('data','encrypt_data')\n            # l = str(k).replace('\\'', '\\\"')\n            # case.json = l\n    \n    \n        # if case.interface == '获取token':\n        json, pc = Access_Token().access_token(str(json),url)\n        # sign = BaseFuntest.get_md5sheng(eval(case.json))\n        # log.info('签名是:{}'.format(sign))\n        # case.json = str(case.json).replace('\\'', '\\\"')\n        # j = json.loads(case.json)\n        # j['sign'] = sign\n        # log.info('转换为json的数据{}'.format(j))\n        # data = eval(case.json)['data']\n        # datastr = str(data).replace('\\'', '\\\"')\n        # dataspace = str(datastr).replace(' ', '')\n        # log.info('data是：{}'.format(dataspace))\n        # pc = aes.PrpCrypt('C9C9F54F74BD35DE5242885762E99E8E')  # 初始化密钥\n        # e = pc.encrypt(dataspace)  # 加密\n        # print(\"加密:\", e)\n        # j['data']=e\n        # print('j是{}'.format(j))\n        # k = str(j).replace('data','encrypt_data')\n        # l = str(k).replace('\\'', '\\\"')\n        # case.json = l\n        # log.info('请求的参数是：{}'.format(case.json))\n        # # 第二步 发送请求，获取结果\n        # log.info('正在请求地址{}'.format(url))\n>       response = init1.request(method=method, url=url, json=eval(json))\n\ntest_case\\test_hcj.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.class_requests.HttpSession object at 0x0000016BF149C3A0>, method = 'post', url = 'https://open.ybj.fujian.gov.cn/api/gafe/rest'\njson = {'appid': '82e82b4703aaafff', 'encrypt_data': 'udacTE352N5hOqGKEIo03EghHghApdQ3sctRJREhW7RO/CjdKL5x/rzZca/1Ojf5', 'encrypt_type': 'PKCS7', 'funid': 'N03.00.05.11', ...}\ndata = None, headers = None\n\n    def request(self, method, url, json=None, data=None, headers=None):\n        # 判断请求方法\n        method = method.lower()\n        if method == 'post':\n>           return self.session.post(url=url, json=json, data=data, headeers=haders)\nE           NameError: name 'haders' is not defined\n\ncommon\\class_requests.py:40: NameError"}, "attachments": [{"name": "log", "source": "1f71cf7a-64fa-413a-b492-ac8d700f0070-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "method", "value": "'post'"}, {"name": "url", "value": "'https://open.ybj.fujian.gov.cn/api/gafe/rest'"}, {"name": "json", "value": "{'funid': 'N03.00.05.11', 'data': {'app_type': '0', 'appid': '82e82b4703aaafff'}, 'appid': '82e82b4703aaafff', 'sign_type': 'MD5', 'encrypt_type': 'PKCS7'}"}, {"name": "excepted", "value": "1"}, {"name": "name", "value": "'正向用例'"}, {"name": "bool", "value": "True"}], "start": 1638416190971, "stop": 1638416190974, "uuid": "cc2cb0df-5cc4-477f-8ec8-f271dcaeb0ba", "historyId": "ff5fc38eff15b0eada3cde7b3013d4c2", "testCaseId": "c9259e76d7efb6e85a07528f5653678e", "fullName": "test_case.test_hcj.Test_ShengZhiTestCase_001#test_shengzhi_public", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_hcj"}, {"name": "subSuite", "value": "Test_ShengZhiTestCase_001"}, {"name": "host", "value": "DESKTOP-EKFOSJF"}, {"name": "thread", "value": "1312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_hcj"}]}